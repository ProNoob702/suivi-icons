{"version":3,"sources":["../../src/BellNotificationsSquare.tsx","../../src/ChecklistTasksChechmarkSquare.tsx","../../src/GridLayout.tsx","../../src/QuestionCircle.tsx","../../src/SearchLoupe.tsx","../../src/SettingsRound.tsx","../../src/StarFavorite.tsx","../../src/ThumbsUpLikeSquare.tsx","App.tsx","index.tsx"],"names":["SvgBellNotificationsSquare","props","viewBox","xmlns","width","height","fill","d","stroke","strokeLinecap","strokeLinejoin","strokeWidth","SvgChecklistTasksChechmarkSquare","x","y","rx","strokeMiterlimit","SvgGridLayout","SvgQuestionCircle","cx","cy","r","SvgSearchLoupe","SvgSettingsRound","SvgStarFavorite","SvgThumbsUpLikeSquare","SearchBlock","onChange","Paper","className","fontSize","color","InputBase","e","target","value","placeholder","inputProps","IconsListBlock","iconsNames","iconsObjsArr","selected","selectIcon","map","X","i","key","clsx","onClick","Typography","variant","App","enqueueSnackbar","useSnackbar","useState","Object","keys","icons","setIconsNames","values","setIconsObjsArr","setSelected","gutterBottom","newTxt","newIconsNames","filter","toUpperCase","includes","newIconsObjsArr","length","code","navigator","clipboard","writeText","anchorOrigin","vertical","horizontal","preventDuplicate","autoHideDuration","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"6pBAEA,SAASA,EAA2BC,GAClC,OACE,6CACEC,QAAQ,YACRC,MAAM,6BACNC,MAAM,MACNC,OAAO,OAJT,GAOE,6BAAGC,KAAK,QACN,gCAAMC,EAAE,oBACR,gCACEC,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,IACbJ,EAAE,oNAEJ,gCACEC,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,IACbJ,EAAE,0ECvBZ,SAASK,EAAiC,GAGxC,OACE,6C,YACY,UACVT,MAAM,6BACND,QAAQ,YACRE,MAAM,MACNC,OAAO,OALT,GAQE,gCACEE,EAAE,mBACFD,KAAK,OACLE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,MAEf,gCACEE,EAAG,EACHC,EAAG,EACHV,MAAO,GACPC,OAAQ,GACRU,GAAI,EACJT,KAAK,OACLE,OAAO,eACPQ,iBAAkB,GAClBL,YAAa,MAEf,gCACEJ,EAAE,qFACFD,KAAK,OACLE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,MAEf,gCAAML,KAAK,OAAOC,EAAE,mBCvC1B,SAASU,EAAchB,GACrB,OACE,6C,YACY,UACVE,MAAM,6BACND,QAAQ,YACRE,MAAM,MACNC,OAAO,OALT,GAQE,gCAAMC,KAAK,OAAOC,EAAE,mBACpB,gCACEM,EAAG,EACHC,EAAG,EACHV,MAAO,GACPC,OAAQ,GACRU,GAAI,EACJJ,YAAa,IACbH,OAAO,eACPC,cAAc,QACdC,eAAe,QACfJ,KAAK,SAEP,gCACEA,KAAK,OACLE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,IACbJ,EAAE,sBC7BV,SAASW,EAAkBjB,GACzB,OACE,6C,YACY,UACVE,MAAM,6BACND,QAAQ,YACRE,MAAM,MACNC,OAAO,OALT,GAQE,kCACEc,GAAI,GACJC,GAAI,GACJC,EAAG,EACHf,KAAK,OACLE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,MAEf,gCACEJ,EAAE,sJACFD,KAAK,OACLE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,MAEf,gCAAMJ,EAAE,gBAAgBD,KAAK,UC5BnC,SAASgB,EAAerB,GACtB,OACE,6C,YACY,UACVE,MAAM,6BACND,QAAQ,YACRE,MAAM,MACNC,OAAO,OALT,GAQE,kCACEc,GAAI,OACJC,GAAI,OACJC,EAAG,MACHf,KAAK,OACLE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,MAEf,gCACEL,KAAK,OACLE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,IACbJ,EAAE,sBAEJ,gCAAMD,KAAK,OAAOC,EAAE,mBC5B1B,SAASgB,EAAiBtB,GACxB,OACE,6C,YACY,UACVE,MAAM,6BACND,QAAQ,YACRE,MAAM,MACNC,OAAO,OALT,GAQE,gCACEE,EAAE,ixBACFD,KAAK,OACLE,OAAO,eACPQ,iBAAkB,GAClBL,YAAa,MAEf,kCACEQ,GAAI,GACJC,GAAI,GACJC,EAAG,MACHf,KAAK,OACLE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,MAEf,gCAAMJ,EAAE,gBAAgBD,KAAK,UC3BnC,SAASkB,EAAgBvB,GACvB,OACE,6C,YACY,UACVE,MAAM,6BACND,QAAQ,YACRE,MAAM,MACNC,OAAO,OALT,GAQE,gCAAME,EAAE,gBAAgBD,KAAK,SAC7B,gCACEC,EAAE,0OACFD,KAAK,OACLE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,OCjBrB,SAASc,EAAsBxB,GAC7B,OACE,6C,YACY,UACVE,MAAM,6BACND,QAAQ,YACRE,MAAM,MACNC,OAAO,OALT,GAQE,gCAAME,EAAE,gBAAgBD,KAAK,SAC7B,gCACEC,EAAE,mOACFD,KAAK,OACLE,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,MAEf,gCACEE,EAAG,EACHC,EAAG,EACHV,MAAO,GACPC,OAAQ,GACRU,GAAI,EACJJ,YAAa,IACbH,OAAO,eACPC,cAAc,QACdC,eAAe,QACfJ,KAAK,U,2BC6CPoB,EAA2C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClD,OACE,kBAACC,EAAA,EAAD,CAAOC,UAAU,eACf,kBAAC,EAAD,CAAmBC,SAAS,KAAKC,MAAM,SACvC,kBAACC,EAAA,EAAD,CACEL,SAAU,SAACM,GAAD,OAAON,EAASM,EAAEC,OAAOC,QACnCC,YAAY,cACZC,WAAY,CAAE,aAAc,0BAa9BC,EAA4C,SAAC,GAK5C,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,SACAC,EACI,EADJA,WAEA,OACE,yBAAKb,UAAU,0BACZW,EAAaG,KAAI,SAACC,EAAGC,GAAJ,OAChB,yBACEC,IAAKP,EAAWM,GAChBhB,UAAWkB,YACT,qBACA,0BACAN,IAAaF,EAAWM,IAAM,gBAEhCG,QAAS,kBAAMN,EAAWG,KAE1B,kBAACjB,EAAA,EAAD,CAAOC,UAAU,qCACf,kBAACe,EAAD,CAAGd,SAAS,QAEd,kBAACmB,EAAA,EAAD,CAAYpB,UAAU,wBAAwBqB,QAAQ,WACnDX,EAAWM,UAQTM,EAlHW,WAAO,IACvBC,EAAoBC,cAApBD,gBADsB,EAEME,mBAASC,OAAOC,KAAKC,IAF3B,mBAEvBlB,EAFuB,KAEXmB,EAFW,OAGUJ,mBAASC,OAAOI,OAAOF,IAHjC,mBAGvBjB,EAHuB,KAGToB,EAHS,OAIEN,mBAAwB,MAJ1B,mBAIvBb,EAJuB,KAIboB,EAJa,KAiC9B,OACE,yBAAKhC,UAAU,kBACb,kBAACoB,EAAA,EAAD,CAAYpB,UAAU,QAAQqB,QAAQ,KAAKY,cAAY,GAAvD,eAGA,yBAAKjC,UAAU,qBACb,kBAACoB,EAAA,EAAD,CACEpB,UAAU,YACVqB,QAAQ,KACRY,cAAY,EACZ/B,MAAM,iBAJR,SAQA,kBAAC,EAAD,CAAaJ,SA5BK,SAACoC,GACvB,GAAe,MAAXA,GAA6B,KAAXA,EAAe,CACnC,IAAMC,EAAgBzB,EAAW0B,QAAO,SAACpD,GAAD,OACtCA,EAAEqD,cAAcC,SAASJ,EAAOG,kBAElCR,EAAcM,GACd,IAAMI,EAAkBJ,EAAcrB,KAAI,SAAC9B,GAAD,OA5BvC4C,EA4B2D5C,MAC9D+C,EAAgBQ,QAEhBV,EAAcH,OAAOC,KAAKC,IAC1BG,EAAgBL,OAAOI,OAAOF,OAmB5B,kBAACR,EAAA,EAAD,CAAYC,QAAQ,WAAWX,EAAW8B,OAA1C,WAEF,kBAAC,EAAD,CACE9B,WAAYA,EACZG,WA/Ca,SAACG,GAClBgB,EAAYtB,EAAWM,IAEvB,IAAMyB,EAAI,mBAAe/B,EAAWM,GAA1B,yBACV0B,UAAUC,UAAUC,UAAUH,GAE9BlB,EAAgB,uBAAD,OAAwBb,EAAWM,IAAM,CACtDK,QAAS,UACTwB,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,kBAAkB,EAClBC,iBAAkB,OAsChBrC,SAAUA,EACVD,aAAcA,MC3DtBuC,IAASC,OACP,kBAAC,IAAD,CAAkBC,SAAU,GAC1B,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.61574734.chunk.js","sourcesContent":["import * as React from 'react'\r\n\r\nfunction SvgBellNotificationsSquare(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      viewBox='0 0 24 24'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      width='1em'\r\n      height='1em'\r\n      {...props}\r\n    >\r\n      <g fill='none'>\r\n        <path d='M0 0h24v24H0V0z' />\r\n        <path\r\n          stroke='currentColor'\r\n          strokeLinecap='round'\r\n          strokeLinejoin='round'\r\n          strokeWidth={1.5}\r\n          d='M7.66 15.3a.5.5 0 01-.5-.5v-1.443c0-.162.078-.313.21-.407L8.7 12V9.408v0A2.908 2.908 0 0111.608 6.5h.785a2.908 2.908 0 012.908 2.908V12l1.331.95a.5.5 0 01.209.406V14.8a.5.5 0 01-.5.5H7.66zM10.9 17.5h2.2-2.2z'\r\n        />\r\n        <path\r\n          stroke='currentColor'\r\n          strokeLinecap='round'\r\n          strokeLinejoin='round'\r\n          strokeWidth={1.5}\r\n          d='M18 21H6a3 3 0 01-3-3V6a3 3 0 013-3h12a3 3 0 013 3v12a3 3 0 01-3 3z'\r\n        />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SvgBellNotificationsSquare\r\n","import * as React from 'react'\r\n\r\nfunction SvgChecklistTasksChechmarkSquare(\r\n  props: React.SVGProps<SVGSVGElement>\r\n) {\r\n  return (\r\n    <svg\r\n      data-name='Layer 3'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 24 24'\r\n      width='1em'\r\n      height='1em'\r\n      {...props}\r\n    >\r\n      <path\r\n        d='M12.952 15.042h4'\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n      />\r\n      <rect\r\n        x={3}\r\n        y={3}\r\n        width={18}\r\n        height={18}\r\n        rx={5}\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeMiterlimit={10}\r\n        strokeWidth={1.5}\r\n      />\r\n      <path\r\n        d='M6.952 14.768l.919.828 1.851-1.666M12.952 10.042h4M6.952 9.768l.919.828 1.85-1.666'\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n      />\r\n      <path fill='none' d='M0 0h24v24H0z' />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SvgChecklistTasksChechmarkSquare\r\n","import * as React from 'react'\r\n\r\nfunction SvgGridLayout(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      data-name='Layer 3'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 24 24'\r\n      width='1em'\r\n      height='1em'\r\n      {...props}\r\n    >\r\n      <path fill='none' d='M24 24H0V0h24z' />\r\n      <rect\r\n        x={3}\r\n        y={3}\r\n        width={18}\r\n        height={18}\r\n        rx={2}\r\n        strokeWidth={1.5}\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        fill='none'\r\n      />\r\n      <path\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n        d='M14 21V3M3 12h11'\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SvgGridLayout\r\n","import * as React from 'react'\r\n\r\nfunction SvgQuestionCircle(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      data-name='Layer 3'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 24 24'\r\n      width='1em'\r\n      height='1em'\r\n      {...props}\r\n    >\r\n      <circle\r\n        cx={12}\r\n        cy={12}\r\n        r={9}\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n      />\r\n      <path\r\n        d='M9.686 9.686A2.18 2.18 0 0111.9 8a2.136 2.136 0 012.25 2c0 1.504-2.15 2-2.15 3M12.125 15.75a.125.125 0 11-.125-.125M12 15.625a.125.125 0 01.125.125'\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n      />\r\n      <path d='M0 0h24v24H0z' fill='none' />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SvgQuestionCircle\r\n","import * as React from 'react'\r\n\r\nfunction SvgSearchLoupe(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      data-name='Layer 3'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 24 24'\r\n      width='1em'\r\n      height='1em'\r\n      {...props}\r\n    >\r\n      <circle\r\n        cx={11.059}\r\n        cy={11.059}\r\n        r={7.059}\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n      />\r\n      <path\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n        d='M20 20l-3.95-3.95'\r\n      />\r\n      <path fill='none' d='M0 0h24v24H0z' />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SvgSearchLoupe\r\n","import * as React from 'react'\r\n\r\nfunction SvgSettingsRound(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      data-name='Layer 3'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 24 24'\r\n      width='1em'\r\n      height='1em'\r\n      {...props}\r\n    >\r\n      <path\r\n        d='M9.654 18.634l.526 1.183A1.991 1.991 0 0012 21h0a1.991 1.991 0 001.82-1.183l.526-1.183a2.183 2.183 0 01.9-1h0a2.19 2.19 0 011.323-.281l1.287.137a1.991 1.991 0 001.934-.985h0a1.99 1.99 0 00-.114-2.167l-.762-1.047A2.186 2.186 0 0118.5 12h0a2.186 2.186 0 01.418-1.286l.762-1.047a1.99 1.99 0 00.114-2.167h0a1.991 1.991 0 00-1.934-.985l-1.287.137a2.19 2.19 0 01-1.323-.281h0a2.183 2.183 0 01-.9-1.005l-.53-1.183A1.991 1.991 0 0012 3h0a1.991 1.991 0 00-1.82 1.183l-.526 1.183a2.183 2.183 0 01-.9 1.005h0a2.19 2.19 0 01-1.323.281L6.14 6.515a1.991 1.991 0 00-1.934.985h0a1.99 1.99 0 00.114 2.167l.762 1.047A2.186 2.186 0 015.5 12h0a2.186 2.186 0 01-.418 1.286l-.762 1.047a1.99 1.99 0 00-.114 2.167h0a1.993 1.993 0 001.934.985l1.287-.137a2.19 2.19 0 011.323.281h0a2.183 2.183 0 01.904 1.005z'\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeMiterlimit={10}\r\n        strokeWidth={1.5}\r\n      />\r\n      <circle\r\n        cx={12}\r\n        cy={12}\r\n        r={2.647}\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n      />\r\n      <path d='M0 0h24v24H0z' fill='none' />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SvgSettingsRound\r\n","import * as React from 'react'\r\n\r\nfunction SvgStarFavorite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      data-name='Layer 3'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 24 24'\r\n      width='1em'\r\n      height='1em'\r\n      {...props}\r\n    >\r\n      <path d='M0 0h24v24H0z' fill='none' />\r\n      <path\r\n        d='M7.733 20.829a1.5 1.5 0 01-2.171-1.592l.809-4.637-3.406-3.264a1.5 1.5 0 01.827-2.571l4.729-.676 2.135-4.259a1.5 1.5 0 012.688 0l2.135 4.259 4.729.676a1.5 1.5 0 01.827 2.571L17.629 14.6l.809 4.638a1.5 1.5 0 01-2.171 1.592L12 18.625z'\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SvgStarFavorite\r\n","import * as React from 'react'\r\n\r\nfunction SvgThumbsUpLikeSquare(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      data-name='Layer 3'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 24 24'\r\n      width='1em'\r\n      height='1em'\r\n      {...props}\r\n    >\r\n      <path d='M0 0h24v24H0z' fill='none' />\r\n      <path\r\n        d='M8 10.334h1.857V16h0H8a1 1 0 01-1-1v-3.666a1 1 0 011-1zM9.857 10.334l1.472-2.822a.952.952 0 011.27-.411l.015.007a1.905 1.905 0 011.053 1.704v1.474h1.904a1.429 1.429 0 011.395 1.735l-.629 2.858A1.429 1.429 0 0114.942 16H9.857'\r\n        fill='none'\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n      />\r\n      <rect\r\n        x={3}\r\n        y={3}\r\n        width={18}\r\n        height={18}\r\n        rx={5}\r\n        strokeWidth={1.5}\r\n        stroke='currentColor'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        fill='none'\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SvgThumbsUpLikeSquare\r\n","import React, { useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport * as icons from 'suivi-icons'\r\nimport { useSnackbar } from 'notistack'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport clsx from 'clsx'\r\n\r\nconst getIconBykey = (key: string) => {\r\n  return icons[key]\r\n}\r\n\r\nconst App: React.FC<{}> = () => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [iconsNames, setIconsNames] = useState(Object.keys(icons))\r\n  const [iconsObjsArr, setIconsObjsArr] = useState(Object.values(icons))\r\n  const [selected, setSelected] = useState<string | null>(null)\r\n  const selectIcon = (i: number) => {\r\n    setSelected(iconsNames[i])\r\n    // copy to clipboard\r\n    const code = `import { ${iconsNames[i]} } from \"suivi-icons\"`\r\n    navigator.clipboard.writeText(code)\r\n    // open snakbar\r\n    enqueueSnackbar(`Successfully Copied ${iconsNames[i]}`, {\r\n      variant: 'success',\r\n      anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n      preventDuplicate: true,\r\n      autoHideDuration: 1000\r\n    })\r\n  }\r\n\r\n  const onNewWrittenTxt = (newTxt: string) => {\r\n    if (newTxt !== ' ' && newTxt !== '') {\r\n      const newIconsNames = iconsNames.filter((x) =>\r\n        x.toUpperCase().includes(newTxt.toUpperCase())\r\n      )\r\n      setIconsNames(newIconsNames)\r\n      const newIconsObjsArr = newIconsNames.map((x) => getIconBykey(x))\r\n      setIconsObjsArr(newIconsObjsArr)\r\n    } else {\r\n      setIconsNames(Object.keys(icons))\r\n      setIconsObjsArr(Object.values(icons))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='iconsContainer'>\r\n      <Typography className='title' variant='h4' gutterBottom>\r\n        Suivi Icons\r\n      </Typography>\r\n      <div className='UpperSide flexRow'>\r\n        <Typography\r\n          className='sub-title'\r\n          variant='h5'\r\n          gutterBottom\r\n          color='textSecondary'\r\n        >\r\n          Icons\r\n        </Typography>\r\n        <SearchBlock onChange={onNewWrittenTxt} />\r\n        <Typography variant='caption'>{iconsNames.length} icons</Typography>\r\n      </div>\r\n      <IconsListBlock\r\n        iconsNames={iconsNames}\r\n        selectIcon={selectIcon}\r\n        selected={selected}\r\n        iconsObjsArr={iconsObjsArr}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ISearchBlockProps {\r\n  onChange: (writtenTxt: string) => void\r\n}\r\n\r\nconst SearchBlock: React.FC<ISearchBlockProps> = ({ onChange }) => {\r\n  return (\r\n    <Paper className='searchBlock'>\r\n      <icons.SearchLoupe fontSize='24' color='gray' />\r\n      <InputBase\r\n        onChange={(e) => onChange(e.target.value)}\r\n        placeholder='Search icon'\r\n        inputProps={{ 'aria-label': 'search suivi icons' }}\r\n      />\r\n    </Paper>\r\n  )\r\n}\r\n\r\ninterface IIconsListProps {\r\n  iconsNames: string[]\r\n  iconsObjsArr: React.ElementType[]\r\n  selected: string | null\r\n  selectIcon: (i: number) => void\r\n}\r\n\r\nconst IconsListBlock: React.FC<IIconsListProps> = ({\r\n  iconsNames,\r\n  iconsObjsArr,\r\n  selected,\r\n  selectIcon\r\n}) => {\r\n  return (\r\n    <div className='IconsListBlock flexRow'>\r\n      {iconsObjsArr.map((X, i) => (\r\n        <div\r\n          key={iconsNames[i]}\r\n          className={clsx(\r\n            'IconLabelContainer',\r\n            'flexColumnCentredChilds',\r\n            selected === iconsNames[i] && 'selectedIcon'\r\n          )}\r\n          onClick={() => selectIcon(i)}\r\n        >\r\n          <Paper className='iconPaper flexColumnCentredChilds'>\r\n            <X fontSize='50' />\r\n          </Paper>\r\n          <Typography className='iconLabel txtEllipsis' variant='caption'>\r\n            {iconsNames[i]}\r\n          </Typography>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nReactDOM.render(\r\n  <SnackbarProvider maxSnack={3}>\r\n    <App />\r\n  </SnackbarProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}